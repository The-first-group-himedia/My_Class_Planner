<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mcp.myclassplanner.model.dao.BoardMapper">
    <resultMap id="BoardDTO" type="mcp.myclassplanner.model.dto.BoardDTO">
        <id property="boardNo" column="board_no"/>
        <result property="username" column="username"/>
        <result property="boardTime" column="board_time"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardContent" column="board_content"/>
        <result property="lev" column="lev"/>
    </resultMap>

    <resultMap id="CommentDTO" type="mcp.myclassplanner.model.dto.CommentDTO">
        <id property="commentNo" column="comment_no"/>
        <result property="username" column="username"/>
        <result property="commentTime" column="comment_time"/>
        <result property="commentContent" column="comment_content"/>
        <result property="boardNo" column="board_no"/>
        <result property="rank" column="lev"/>
    </resultMap>

    <select id="findByTitle" resultMap="BoardDTO" parameterType="string">
        SELECT
        a.board_no,
        a.username,
        a.board_time,
        a.board_title,
        a.board_content,
        b.lev
        FROM tbl_board a
        left join tbl_member b
        on a.username = b.username
        WHERE board_title LIKE CONCAT('%', #{searchValue}, '%')
        ORDER BY board_time DESC
    </select>

    <select id="findByContext" resultMap="BoardDTO" parameterType="string">
        SELECT
        a.board_no,
        a.username,
        a.board_time,
        a.board_title,
        a.board_content,
        b.lev
        FROM tbl_board a
        left join tbl_member b
        on a.username = b.username
        WHERE board_content LIKE CONCAT('%', #{searchValue}, '%')
        ORDER BY board_time DESC
    </select>

    <select id="findByAuthor" resultMap="BoardDTO" parameterType="string">
        SELECT
        a.board_no,
        a.username,
        a.board_time,
        a.board_title,
        a.board_content,
        b.lev
        FROM tbl_board a
        left join tbl_member b
        on a.username = b.username
        WHERE a.username LIKE CONCAT('%', #{searchValue}, '%')
        ORDER BY board_time DESC
    </select>

    <select id="findAll" resultMap="BoardDTO" parameterType="int">
        SELECT
        a.board_no,
        a.username,
        a.board_time,
        a.board_title,
        a.board_content,
        b.lev
        FROM tbl_board a
        left join tbl_member b
        on a.username = b.username
        ORDER BY board_time DESC
        LIMIT 10 OFFSET #{page};
    </select>
    <select id="viewByBoardNo" resultMap="BoardDTO" parameterType="int">
        SELECT
        a.board_no,
        a.username,
        a.board_time,
        a.board_title,
        a.board_content,
        b.lev
        FROM tbl_board a
        left join tbl_member b
        on a.username = b.username
        where board_no = #{boardNo};
    </select>

    <select id="viewCommentByBoardNo" resultMap="CommentDTO" parameterType="int">
        SELECT
        a.comment_no,
        a.username,
        a.comment_time,
        a.comment_content,
        b.lev
        FROM tbl_comment a
        left join tbl_member b
        on a.username = b.username
        where board_no = #{boardNo}
        order by comment_time;
    </select>
    <select id="totalRecord" resultType="java.lang.Integer">
        select count(*) from tbl_board
    </select>
    <insert id="postPro" parameterType="hashMap" useGeneratedKeys="true" keyProperty="board_no">
        insert into tbl_board
        (
        username,
        board_time,
        board_title,
        board_content
        )
        VALUES
        (
        #{username},
        #{time},
        #{index0},
        #{index1}
        )
    </insert>
    <insert id="comment" parameterType="hashMap" useGeneratedKeys="true" keyProperty="comment_no">
        insert into tbl_comment
        (
        username,
        comment_time,
        comment_content,
        board_no
        ) values
        (
        #{username},
        #{commentTime},
        #{comment},
        #{boardNo}
        )
    </insert>
    <select id="getAuthor" parameterType="int" resultType="string">
        select username from tbl_board
        where board_no = #{boardNo};
    </select>
    <delete id="deletePost" parameterType="int">
        delete from tbl_board
        where board_no = #{boardNo};
    </delete>
    <delete id="deletePostComment" parameterType="int">
        delete from tbl_comment
        where board_no = #{boardNo};
    </delete>

</mapper>